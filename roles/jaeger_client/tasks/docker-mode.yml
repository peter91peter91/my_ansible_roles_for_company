---
- name: Ensure dependencies are installed.
  package:
    name:
      - sudo
      - rsync
      - python3
      - python3-pip
      - python3-docker
      - python3-jsondiff
      - python3-pyyaml-env-tag

- name: Ensure network is exist
  docker_network:
    name: "{{ jaeger_client_container_network_name }}"
    driver: "{{ jaeger_client_container_network_driver }}"
    driver_options: "{{ jaeger_client_container_network_driver_options | default(omit) }}"
    attachable: yes  # Делаем сеть доступной для контейнеров
    state: present
  # when: not ansible_check_mode and not lookup('docker_networks', jaeger_client_container_network_name, quiet=True)

- name: "Registry login to {{ registry_host }}"
  docker_login:
    registry: "{{ registry_url }}"
    username: "{{ registry_login }}"
    password: "{{ registry_pass }}"

- name: Start container
  docker_container:
    name: "jaeger-agent"
    image: "jaegertracing/jaeger-agent"
    network_mode: "{{ jaeger_client_container_network_mode }}"
    networks:
      - name: "{{ jaeger_client_container_network_name }}"
    command: "--reporter.grpc.host-port={{ jaeger_collector }}"
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    networks_cli_compatible: false
    env: "{{ jaeger_client_container_env_default | combine(jaeger_client_container_env) }}"
    state: "{{ jaeger_client_container_state }}"
    recreate: "{{ jaeger_client_container_recreate }}"
    restart_policy: "{{ jaeger_client_container_restart_policy }}"
    labels: "{{ jaeger_client_container_labels | default(omit) }}"